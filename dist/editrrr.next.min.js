/*!
 * editrrr - version 0.1.0
 *
 * Made with ❤ by Steve Ottoz so@dev.so
 *
 * Copyright (c) 2017 Steve Ottoz
 */
const defaults={textarea:null,replaceTab:!0,softTabs:!0,tabSize:2,autoOpen:!0,overwrite:!0,autoStrip:!0,autoIndent:!0,continueList:!0,moveLine:!0,duplicateLine:!0},keyMap=[{open:'"',close:'"',canBreak:!1},{open:'\'',close:'\'',canBreak:!1},{open:'`',close:'`',canBreak:!1},{open:'(',close:')',canBreak:!1},{open:'[',close:']',canBreak:!0},{open:'{',close:'}',canBreak:!0},{open:'<',close:'>',canBreak:!1}],hooks={};export default class Editrrr{constructor(f){this.options=Object.assign({},defaults,f),this.textarea=this.options.textarea,this.init()}static addHook(f,g){Array.isArray(f)||(f=[f]);for(let h of f)hooks[h]||(hooks[h]=[]),hooks[h].push(g)}static getHook(f){return hooks[f]}callHook(f,g){const h=Editrrr.getHook(f);if(h){this.textarea.value,this.getCursor();for(let j of h)j.call(this,this,g)}return this}getLineNr(f=this.getCursor()){return this.value.substring(0,f).split('\n').length}getLine(f=this.getCursor()){return this.value.substring(0,f).split('\n').pop()}getLines(){return this.value.split(/\r?\n/)}getCursor(){return this.textarea.selectionStart}setCursor(f,g=f){return this.textarea.focus(),this.textarea.setSelectionRange(f,g),this}getSelection(){const f=this.textarea.selectionStart,g=this.textarea.selectionEnd;return f!==g&&{start:f,end:g}}get value(){return this.textarea.value.replace(/\r/g,'')}set value(f){this.textarea.value=f}focus(){return this.textarea.focus(),this}blur(){return this.textarea.blur(),this}levelsDeep(){const f=this.getCursor(),g=this.value.substring(0,f),h=['\'','"'];let l,j=0,k=0;for(let m of g)for(let n of keyMap)n.canBreak&&(n.open===m&&j++,n.close===m&&j--);for(let m of keyMap)if(m.canBreak)for(let n of h)k+=g.split(n).filter((o,p)=>p%2).join('').split(m.open).length-1;return l=j-k,Math.max(l,0)}tabKey(f){let g;if(9===f.keyCode){f.preventDefault(),this.callHook('tab:before');const h=this.getSelection(),j=this.getCursor();if(g=!0,h){for(let k=h.start;k--;)if('\n'===this.value.charAt(k)){h.start=k+1;break}let l=this.value.substring(h.start,h.end),m=l.split('\n');if(f.shiftKey){for(let n in m){let o=m[n];o.substring(0,this.tab.length)===this.tab&&(m[n]=o.substring(this.tab.length))}l=m.join('\n'),this.value=`${this.value.substring(0,h.start)}${l}${this.value.substring(h.end)}`,this.setCursor(h.start,h.start+l.length)}else{for(let n in m)m[n]=this.tab+m[n];l=m.join('\n'),this.value=`${this.value.substring(0,h.start)}${l}${this.value.substring(h.end)}`,this.setCursor(h.start,h.start+l.length)}}else{const k=this.value.substring(0,j),l=this.value.substring(j);let m=`${k}${this.tab}${l}`;f.shiftKey?this.value.substring(j-this.tab.length,j)===this.tab&&(this.value=`${this.value.substring(0,j-this.tab.length)}${l}`,this.setCursor(j-this.tab.length)):(this.value=m,this.setCursor(j+this.tab.length),g=!1)}this.callHook('tab:after')}return g}enterKey(f){if(13===f.keyCode){f.preventDefault(),this.callHook('enter:before');const g=this.getCursor(),h=this.value.substring(0,g),j=this.value.substring(g),k=h.charAt(h.length-1),l=j.charAt(0);let m=this.levelsDeep(),n='',o='',p;if(!m)p=1;else{for(;m--;)n+=this.tab;p=n.length+1;for(let q of keyMap)q.open===k&&q.close===l&&(o=this.newLine)}this.value=`${h}${this.newLine}${n}${o}${n.substring(0,n.length-this.tab.length)}${j}`,this.setCursor(g+p),this.callHook('enter:after')}}enterKeyList(f){if(13===f.keyCode){f.preventDefault(),this.callHook('enter:before');let g=this.getCursor();const h=this.value.substring(0,g),j=this.value.substring(g),k=Math.max(0,h.split(/\r?\n/).length-2),l=this.getLines(),m=l[k];let n,o;(n=m.match(/^\s*([\-\–\—\+\*\•\·\»\>]|\d+\.)\s(\[[\sx]\]\s)?/))&&(m===n[0]?(g-=m.length,l[k]='',o=l.join('\n')):(o=`${h}${n[0]}${j}`,g+=n[0].length),this.value=o,this.setCursor(g)),this.callHook('enter:after')}}deleteKey(f){if(8===f.keyCode&&!f.altKey){f.preventDefault(),this.callHook('delete:before');const g=this.getCursor(),h=this.value.substring(0,g),j=this.value.substring(g),k=h.charAt(h.length-1),l=j.charAt(0);if(!1===this.getSelection()){for(let m of keyMap)if(m.open===k&&m.close===l)return this.value=`${this.value.substring(0,g-1)}${this.value.substring(g+1)}`,void this.setCursor(g-1);this.value=`${this.value.substring(0,g-1)}${this.value.substring(g)}`,this.setCursor(g-1)}else{const m=this.getSelection();this.value=`${this.value.substring(0,m.start)}${this.value.substring(m.end)}`,this.setCursor(g)}this.callHook('delete:after')}}moveLine(f){if(f.ctrlKey&&(this.isMac&&f.metaKey||this.isWin&&f.shiftKey)&&0<=[38,40].indexOf(f.keyCode)){f.preventDefault();const g=this.getSelection();let h=this.getLines();if(g){let j=this.getLineNr(g.start)-1,k=this.getLineNr(g.end)-1,l,m;if(38===f.keyCode){if(0<j){for(let n=j;n<=k;n++)h=this.lineUp(h,n);j--,k--}}else if(40===f.keyCode&&k<h.length-1){for(let n=k;n>=j;n--)h=this.lineDown(h,n);j++,k++}l=h.slice(0,j).join('\n').length,m=h.slice(0,k+1).join('\n').length,0<l&&l++,this.value=h.join('\n'),this.setCursor(l,m)}else{const j=this.getLineNr()-1,k=this.getCursor();let l=k;38===f.keyCode?0<j&&(h=this.lineUp(h,j),l=k-h[j].length-1):40===f.keyCode&&j<h.length-1&&(h=this.lineDown(h,j),l=k+h[j].length+1),this.value=h.join('\n'),this.setCursor(l)}}}duplicateLine(f){if(f.shiftKey&&(this.isMac&&f.metaKey||this.isWin&&f.ctrlKey)&&68===f.keyCode){f.preventDefault();const g=this.getSelection();let h=this.getLines();if(g){let j=this.getLineNr(g.start)-1,k=this.getLineNr(g.end)-1,l=k-j+1,m=k,n,o;for(let p=j;p<=k;p++)m++,h.splice(m,0,h[p]);n=h.slice(0,j+l).join('\n').length,o=h.slice(0,k+l+1).join('\n').length,0<n&&n++,this.value=h.join('\n'),this.setCursor(n,o)}else{const j=this.getLineNr()-1,k=this.getCursor();let l=k;h.splice(j+1,0,h[j]),l=k+h[j].length+1,this.value=h.join('\n'),this.setCursor(l)}}}openedChar(f,g){g.preventDefault(),this.callHook('openChar:before');const h=this.getCursor(),j=this.value.substring(0,h),k=this.value.substring(h);this.value=`${j}${f.open}${f.close}${k}`,this.setCursor(h+1),this.callHook('openChar:after')}closedChar(f,g){const h=this.getCursor(),j=this.value.substring(h,h+1);return!(j!==f.close)&&(g.preventDefault(),this.callHook('closeChar:before'),this.setCursor(h+1),this.callHook('closeChar:after'),!0)}filter(f){for(let g of keyMap)if(g.close==f.key){const h=this.options.overwrite&&this.closedChar(g,f);!h&&g.open===f.key&&this.options.autoOpen&&this.openedChar(g,f)}else g.open===f.key&&this.options.autoOpen&&this.openedChar(g,f)}addEvent(f,g){return this.textarea.addEventListener(f,g,!1),this}removeEvent(f,g){return this.textarea.removeEventListener(f,g,!1),this}listen(){this.listeners={keydown:[],keypress:[],keyup:[],input:[]},this.options.replaceTab&&this.listeners.keydown.push(this.tabKey.bind(this)),this.options.autoIndent&&this.listeners.keydown.push(this.enterKey.bind(this)),this.options.autoStrip&&this.listeners.keydown.push(this.deleteKey.bind(this)),this.options.continueList&&this.listeners.keydown.push(this.enterKeyList.bind(this)),this.options.moveLine&&this.listeners.keydown.push(this.moveLine.bind(this)),this.options.duplicateLine&&this.listeners.keydown.push(this.duplicateLine.bind(this)),this.listeners.keypress.push(this.filter.bind(this)),this.listeners.keydown.push(f=>{this.callHook('keydown',f)}),this.listeners.keyup.push(f=>{this.callHook('keyup',f)}),this.listeners.input.push(f=>{this.callHook('input',f)});for(let f of Object.keys(this.listeners)){const g=this.listeners[f];for(let h of g)this.addEvent(f,h)}return this}defineTabSize(f){return this.textarea.style[this.prefix('tab-size')]=f,this}defineNewLine(){const f=document.createElement('textarea');return f.value='\n',this.newLine=2===f.value.length?'\r\n':'\n',this}lineUp(f=this.getLines(),g=0){if(0<g){const h=f[g],j=f[g-1];f[g]=j,f[g-1]=h}return f}lineDown(f=this.getLines(),g=0){if(g<f.length-1){const h=f[g],j=f[g+1];f[g]=j,f[g+1]=h}return f}prefix(f,g,h,j){for(j?j=g.toUpperCase():g=4;!j&&g--;j=(j=j.replace(/-(.)/g,prefix))in new Image().style&&j)j=[['Moz-','Webkit-','Ms-','O-'][g]]+f;return j||f}init(){return this.isMac=/(Mac)/gi.test(navigator.platform),this.isWin=/(Win)/gi.test(navigator.platform),this.textarea&&(this.callHook('init:before'),this.defineNewLine(),this.options.softTabs?this.tab=' '.repeat(this.options.tabSize):(this.tab='\t',this.defineTabSize(this.options.tabSize)),this.listen(),this.callHook('init:after')),this}destroy(){this.callHook('destroy:before');for(let f of Object.keys(this.listeners)){const g=this.listeners[f];for(let h of g)this.removeEvent(f,h)}return this.callHook('destroy:before'),this}}